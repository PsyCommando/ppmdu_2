=============================================================
==  Baz the Poochyena's Pokemon Mystery Dungeon Pack Tool  ==
=============================================================
Version	   : 0.53
Released   : 2014
Written by : Psy_commando

The entire sourcecode for all my tools that are part of this suite is available here:
https://github.com/PsyCommando/ppmdu/

----------------------------------------------------------------------------------------------------
Changelog:
----------------------------------------------------------------------------------------------------
- 0.53(2015/03/01):
    * Added more supported file extension support for giving unpacked files the correct file extension!
      Now detects : wte, wtu, sir0pkdpx, sir0 generic, sir0at4px, rgbx32pal.

----------------------------------------------------------------------------------------------------
License info:
----------------------------------------------------------------------------------------------------
My code and tools are basically public domain / CC0. 
Free to re-use in any ways you may want to!
No crappyrights, all wrongs reversed! :3

This is not including any libraries I'm using that have their own licenses of course!!
The license for each of these libraries is indicated in their respective header files,
and they're all isolated in the "libraries" subfolder !

----------------------------------------------------------------------------------------------------
Special Thanks:
----------------------------------------------------------------------------------------------------
-> Many thanks to Zhorken for reversing most of the "PX" compression format! - https://github.com/Zhorken
-> A big thanks to Nerketur for his help !
-> A big thanks to TruePikachu for his help !
-> A big thanks to Evandixon for his help !
-> Thanks to the people from GBATemp and Project Pokemon Forums !
-> Thanks to MNChino for helping with testing !
-> ..and anyone else I may have forgotten about !

----------------------------------------------------------------------------------------------------
About:
----------------------------------------------------------------------------------------------------
This little utility packs / unpacks files into an uncompressed containers / several smaller files
from the Pokemon Mystery Dungeon 2 : Explorers of Sky / Darkness / Time games. 
(Only tested on Explorers of sky as of now.. But the format are most likely similar/identical) 

It never locks up to wait for input, even in case of errors. So it can be safely launched 
from another script or program. 

It was written in C++ with portability and speed in mind. So, it should be very 
easy to compile it for linux(I haven't tried yet ^^; ).

It might still be buggy, so I'd advise people to take their precautions when using it.. MAKE BACKUPS !
Because its easy to screw up beyond recognition a file by accident.. And, I can't be held responsible 
if you lose a sprite you worked hours on, because the utility crapped out for some reasons.. So once
again, MAKE BACKUPS !

------------------------------
--Random Uninteresting Fact--:
------------------------------
The weird name is inspired from my EoS playthrough, where I cheated to get a Poochyena as starter. 
He turned out really good after ingesting so many gummies and pretty much carried the team 
most of the game! XD
And, I just love that pokemon, so yeah, that's pretty much it.. :3

----------------------------------------------------------------------------------------------------
How to use:
----------------------------------------------------------------------------------------------------
Simply drag and drop a folder containing the files you want to pack onto the executable, and a 
pack file containing the packed data from the folder will be created. The file has the same name as 
the folder, but with an additional ".bin" appended.

If you drag and drop a file onto it, it will then unpack the content of the file if possible to a 
new directory !The folder has the same name as the file, but with "_out" appended.

You can also use the console if you want to.

----------------------------------------------------------------------------------------------------
About "Pack" Files:
----------------------------------------------------------------------------------------------------
==========================================================================================
									Structure: 
==========================================================================================

offset:			length:			endian:				description:
-------			-------			-------				-----------------------------------
0x0 			0x4				-					0x00000000
0x4				0x4				little				NbOfFiles 

0x8 		N = (NbOfFiles * 8)					    FOffsetTable : Table containing the offset and length or each files in the pack file.
[
	[
		0x8		0x4				little				Offset first file
		0xc		0x4				little				Length first file
	]
	[
		0x10	0x4				little				Offset second file
		0x14	0x4				little				Length second file
	]
	etc...
]

N + 0x8			0x8				-					End of table marker: 0x00000000 0x00000000
N + 0x10		varies			-					Padding 0xFFFFFFFF bytes. They're here so the first file is aligned on 16 bytes(*About post-header padding)

FileDataBlock	varies								Its basically all the packed files put one after the other. With padding applied if needed !
[
	M			O			-						Data for a file.
	M + O		0x0-0xE		-						0xFF Padding characters inserted so a file aligns properly on 16 bytes.
	etc...
]


---------------------------
*About post-header padding
---------------------------
The padding right after the filed offset table is special. 
Its main purpose is to align the first file on 16 bytes :

FirstFileOffset % 16 = 0

BUT, it also seems to have another use..
In the pokemon-related sprite data packs, like m_ground.bin, monster.bin, m_attack.bin, there are 3 EXTRA 
rows(48 bytes) of 0xFFFFFFFF padding. They all have the same number of subfiles, and all of their first subfiles 
begin on offset 0x1300.. 

When I attempted re-packing the m_ground.bin file, I removed those extra lines. But the result was that
the rebuilt ROM wouldn't display any pokemon in-game sprites, and would just crash after a while.
Even re-packing all the files in the "MONSTER" folder from the rom file system to have the same padding lengths and have 
their first files begin at the same offset didn't fix the issue. 

Thus, I'm wondering if they didn't add those extra 48 bytes of padding for a reason. So that all those 
files would have the same first file offset? Its probably a relic from re-using so much things from the 
GBA games.. It might be an hard-coded value in the game's code. But anyhow, it means until we find out how to
bypass that, we'll be limited in the number of new sprites we can add.. About 9 new sprite files 
can be added to the FOT before the first file would have its base offset pushed back.. But replacing
existing sprites is completely doable !

So far it seems rebuilding any other pack files with those 3 extra rows of padding causes no extra problems,
and ensures all repacked files will work, in the case of PMD:EoS at least.. 

So far I found those files were pack files:
- dungeon.bin
- effect.bin
- m_attack.bin
- m_ground.bin
- m_level.bin
- monster.bin

There may be more, but I haven't seen them yet. Also, its worth noting that, NOT all files with a 
".bin" extension are pack files ! Or at least they don't use the same structure, and won't be unpacked 
by this utility. 



